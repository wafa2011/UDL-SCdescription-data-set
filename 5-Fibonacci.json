{

"udl-SC_version" : "1.0", 
"name" : "Fibonacci", 
"creation_date":"2020-06-23",
"Business Perspective": {
	"Legal":{ "name": "Ricardian contract" , "type":"Ricardian contract" ,"link":"https://www.barclays.co.uk/" "description":"Independent service quality survey results"},
	"QOS":{ "service level": { "latency": "1ms", "gasConsomation": "105", "ContractGasPrice":"52505"},
			"Princing" :{" Gaslimit": "80000000", "tokenPrice": "234.56 USD"},
			"security" : {"signed": "yes", "tested": "yes", "link":"https://github.com/cleanunicorn/karl", "description" : "Karl by Daniel Luca is a monitor for smart contracts that checks for security vulnerabilities using the Mythril detection engine. It can be used to monitor the Ethereum blockchain for newly deployed vulnerable smart contracts in real-time. It eliminates false positives by running candidate contracts in a virtual copy of the blockchain. Trust us, Karl discovers a lot of interesting gems every day."}

	},
	"participants" : {
		"provider":"0xfe1bD11cD131C02f31A8b213651A8358FA1ab7a8",
		"FutureUserType":"smart contract"
	},
"sc characteristics ":{
		"documentational characteristics":{ "used compiler":"0.5.2+commit.1df8f40c", 
		    "usedRessources":"0xa65ce491bf1237e421d891c09e7dc643b6e9a14dbb19356a751429087250118f", 
		    "abi" : [
	{
		"constant": true,
		"inputs": [
			{
				"name": "n",
				"type": "uint256"
			}
		],
		"name": "fib",
		"outputs": [
			{
				"name": "",
				"type": "uint256"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	}
],
			"deployed byte code" : {
	"linkReferences": {},
	"object": "608060405234801561001057600080fd5b50610106806100206000396000f3fe6080604052348015600f57600080fd5b50600436106045576000357c010000000000000000000000000000000000000000000000000000000090048063c6c2ea1714604a575b600080fd5b607360048036036020811015605e57600080fd5b81019080803590602001909291905050506089565b6040518082815260200191505060405180910390f35b600080821415609a576000905060d5565b6000600190506000600190506000600290505b8481101560ce576000828401905083925080935050808060010191505060ad565b5081925050505b91905056fea165627a7a7230582003f0951286c10d55a3916fb55336c47688c05f27a91ec58cec5b640eb6a1717d0029",
	"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x45 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0xC6C2EA17 EQ PUSH1 0x4A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO PUSH1 0x9A JUMPI PUSH1 0x0 SWAP1 POP PUSH1 0xD5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x2 SWAP1 POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH1 0xCE JUMPI PUSH1 0x0 DUP3 DUP5 ADD SWAP1 POP DUP4 SWAP3 POP DUP1 SWAP4 POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH1 0xAD JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 SUB CREATE SWAP6 SLT DUP7 0xc1 0xd SSTORE LOG3 SWAP2 PUSH16 0xB55336C47688C05F27A91EC58CEC5B64 0xe 0xb6 LOG1 PUSH18 0x7D0029000000000000000000000000000000 ",
	"sourceMap": "27:292:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27:292:0;;;;;;;"
},
			"description" : "a contract that execute Fibonacci Suite",
			"hash":"03f0951286c10d55a3916fb55336c47688c05f27a91ec58cec5b640eb6a1717d", 
			"metadata":"ipfs://Qmb1NAqLSfL1SK4JW4wu54dfT19rTUG4ikJ5S5rReKn6ig"},
	    "common characteristics":{"type":"Application logic contracts (ALCs)",
			"category":"static", "updateDate":"","state":"mutable","version":"solidity ^0.5.2", "initialBalance ": "0"
	      ,"creationDate":"5/1/2021", "lifeCycle":"ready"}}},


"technical Perspective":{ "blockhain characteristics ":{ "name":"Ethereum",  "type":"public", "consensus":"proof of stacke","currency":"ETH"},
"Protocol information":{ "adress":"0xf8e81D47203A594245E36C48e151709F0C19fBe8"}
},
"operationalPerspective":{
	"Functions" : [
	{"name": "Fib",
	"Type": "pure",
	"scope" : "public",
	"description": "execute Fibonacci Suite and return a uint",
	"inputs":[{"name": "n", "Type": "uint" }],
	"outputs": [{"name": "" , "Type": "uint" }]
	}],
	"Events": []
}
}